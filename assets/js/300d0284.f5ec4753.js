(self.webpackChunkhhow_09_github_io=self.webpackChunkhhow_09_github_io||[]).push([[520],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(r),m=o,h=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return r?n.createElement(h,a(a({ref:t},u),{},{components:r})):n.createElement(h,a({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2595:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return l},metadata:function(){return c},toc:function(){return s},default:function(){return p}});var n=r(2122),o=r(9756),i=(r(7294),r(3905)),a=["components"],l={},c={unversionedId:"web-dev/web-browser-event-loop",id:"web-dev/web-browser-event-loop",isDocsHomePage:!1,title:"Event Loop",description:"Event Loop",source:"@site/docs/web-dev/3-web-browser-event-loop.md",sourceDirName:"web-dev",slug:"/web-dev/web-browser-event-loop",permalink:"/web-dev/web-browser-event-loop",editUrl:"https://github.com/hhow09/hhow09.github.io/blob/source/docs/web-dev/3-web-browser-event-loop.md",version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Browser Navigation Flow",permalink:"/web-dev/web-browser-navigation-flow"},next:{title:"JS engine: Introduction",permalink:"/web-dev/web-js-engine-introduction"}},s=[{value:"Terms",id:"terms",children:[{value:"libuv",id:"libuv",children:[]},{value:"Task ( = <code>Macrotask</code>)",id:"task---macrotask",children:[]},{value:"Generic task sources",id:"generic-task-sources",children:[]},{value:"Microtask",id:"microtask",children:[]},{value:"Tick",id:"tick",children:[]}]},{value:"Event Loop",id:"event-loop",children:[]},{value:"Reference",id:"reference",children:[]}],u={toc:s};function p(e){var t=e.components,l=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Event Loop",src:r(5951).Z})),(0,i.kt)("h2",{id:"terms"},"Terms"),(0,i.kt)("h3",{id:"libuv"},"libuv"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Libuv is an open-source library that handles the thread-pool, doing signaling, inter process communications all other magic needed to make the asynchronous tasks work at all."),(0,i.kt)("li",{parentName:"ul"},"Libuv was originally developed for Node.js")),(0,i.kt)("h3",{id:"task---macrotask"},"Task ( = ",(0,i.kt)("inlineCode",{parentName:"h3"},"Macrotask"),")"),(0,i.kt)("h3",{id:"generic-task-sources"},(0,i.kt)("a",{parentName:"h3",href:"https://html.spec.whatwg.org/multipage/webappapis.html#generic-task-sources"},"Generic task sources")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"DOM manipulation"),(0,i.kt)("li",{parentName:"ul"},"User Interaction: keyboard or mouse input"),(0,i.kt)("li",{parentName:"ul"},"Network activity"),(0,i.kt)("li",{parentName:"ul"},"history traversal\uff1aEx. history.back() API")),(0,i.kt)("h3",{id:"microtask"},"Microtask"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"microtask")," is a short function which ",(0,i.kt)("strong",{parentName:"p"},"is executed after the function or program which created it exits and only if the JavaScript execution stack is empty, but before returning control to the event loop being used by the user agent to drive the script's execution environment"),"."),(0,i.kt)("h3",{id:"tick"},"Tick"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"a complete process of ",(0,i.kt)("inlineCode",{parentName:"li"},"one event loop")," including:",(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"dequeuing")," of an event from the ",(0,i.kt)("inlineCode",{parentName:"li"},"event loop queue")),(0,i.kt)("li",{parentName:"ol"},"the execution of said event.")))),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"event-loop"},"Event Loop"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"macrotask should be processed from the macrotask queue in one tick of the event loop. After this macrotask has finished, all other available microtasks should be processed within the same tick.")),(0,i.kt)("p",null,"//TODO"),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"reference"},"Reference"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide"},"Using microtasks in JavaScript with queueMicrotask()")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://dev.to/khaosdoctor/node-js-under-the-hood-3-deep-dive-into-the-event-loop-135d"},"Node.js Under The Hood #3 - Deep Dive Into the Event Loop")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://yeefun.github.io/event-loop-in-depth/?fbclid=IwAR0zHuodyFada1gfYL2P6CJjbHzxgX8KMAaUAlTsewERngKbswrf0guC-zU"},"\u6211\u77e5\u9053\u4f60\u61c2 Event Loop\uff0c\u4f46\u4f60\u4e86\u89e3\u5230\u591a\u6df1\uff1f")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://medium.com/infinitegamer/why-event-loop-exist-e8ac9d287044"},"\u3010\u7b46\u8a18\u3011\u5230\u5e95 Event Loop \u95dc\u6211\u5565\u4e8b\uff1f"))))}p.isMDXComponent=!0},5951:function(e,t,r){"use strict";t.Z=r.p+"assets/images/event-loop-7a1d63e9dc645a2978252e1a7d9abafe.png"}}]);