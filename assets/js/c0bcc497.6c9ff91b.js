(self.webpackChunkhhow_09_github_io=self.webpackChunkhhow_09_github_io||[]).push([[2514],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||i;return n?r.createElement(f,l(l({ref:t},s),{},{components:n})):r.createElement(f,l({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=p;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},706:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),l=["components"],o={},c={unversionedId:"react/react-dev-detail",id:"react/react-dev-detail",isDocsHomePage:!1,title:"React Dev Notes",description:"1. reducer of useReducer and updater function of setState will be called twice in strict mode.",source:"@site/docs/react/4-react-dev-detail.md",sourceDirName:"react",slug:"/react/react-dev-detail",permalink:"/react/react-dev-detail",editUrl:"https://github.com/hhow09/hhow09.github.io/blob/source/docs/react/4-react-dev-detail.md",version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"3 Ways To Pass Values From Child to Parent",permalink:"/react/react-parent-child-pass-value"},next:{title:"React Interview Questions",permalink:"/react/react-interview-questions"}},u=[{value:"1. <code>reducer</code> of <code>useReducer</code> and <code>updater function</code> of setState will be called twice in strict mode.",id:"1-reducer-of-usereducer-and-updater-function-of-setstate-will-be-called-twice-in-strict-mode",children:[]},{value:"2. previous state of <code>useReducer</code> reducer and updater function of setState IS PASS BY REFERENCE.",id:"2-previous-state-of-usereducer-reducer-and-updater-function-of-setstate-is-pass-by-reference",children:[]},{value:"3. reducer should remain constant reference",id:"3-reducer-should-remain-constant-reference",children:[]},{value:"4. return a function in useCallback",id:"4-return-a-function-in-usecallback",children:[]},{value:"5. React.cloneElement to pass some props to <code>props.children</code>",id:"5-reactcloneelement-to-pass-some-props-to-propschildren",children:[]}],s={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"1-reducer-of-usereducer-and-updater-function-of-setstate-will-be-called-twice-in-strict-mode"},"1. ",(0,i.kt)("inlineCode",{parentName:"h3"},"reducer")," of ",(0,i.kt)("inlineCode",{parentName:"h3"},"useReducer")," and ",(0,i.kt)("inlineCode",{parentName:"h3"},"updater function")," of setState will be called twice in strict mode."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"reference: ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/facebook/react/issues/12856"},"React.StrictMode causes setState to fire twice #12856")),(0,i.kt)("li",{parentName:"ul"},"should not perform side effect inside updater function")),(0,i.kt)("h3",{id:"2-previous-state-of-usereducer-reducer-and-updater-function-of-setstate-is-pass-by-reference"},"2. previous state of ",(0,i.kt)("inlineCode",{parentName:"h3"},"useReducer")," reducer and updater function of setState IS PASS BY REFERENCE."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Don't directly modify previous state"),(0,i.kt)("li",{parentName:"ul"},"Deep copy previous state if you want to yous.")),(0,i.kt)("h3",{id:"3-reducer-should-remain-constant-reference"},"3. reducer should remain constant reference"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Not working example")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"const reducer = (state,action)=>{...}\nconst getReducer = (someProps) => reducer;\nconst [state, dispatch] = (getReducer(props), initialState);\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"props should by pass into reducer with ",(0,i.kt)("inlineCode",{parentName:"li"},"action"))),(0,i.kt)("h3",{id:"4-return-a-function-in-usecallback"},"4. return a function in useCallback"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Purpose: Try to memoize the callback function ",(0,i.kt)("inlineCode",{parentName:"li"},"getOnClick")," for ",(0,i.kt)("inlineCode",{parentName:"li"},"Child"),"."),(0,i.kt)("li",{parentName:"ul"},"Assume We need information of ",(0,i.kt)("inlineCode",{parentName:"li"},"index")," to get the real onClick callback.")),(0,i.kt)("h4",{id:"not-working-example"},"Not working example"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"only ",(0,i.kt)("inlineCode",{parentName:"li"},"(idx)=>{...}")," is memoized, but not ",(0,i.kt)("inlineCode",{parentName:"li"},"(e)=>{...}")," ."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Child")," is still getting newly created ",(0,i.kt)("inlineCode",{parentName:"li"},"(e)=>{...}")," on every render.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"const getOnClick = useCallback((idx)=>(e)=>{...},[...]);\nconst List = list.map((el,idx)=><Child onClick={getOnClick(idx)}/>);\n")),(0,i.kt)("h4",{id:"working-example"},"Working example:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"we can generate pass ",(0,i.kt)("inlineCode",{parentName:"li"},"idx")," to ",(0,i.kt)("inlineCode",{parentName:"li"},"Child"),", than ",(0,i.kt)("inlineCode",{parentName:"li"},"(e)=>{...}")," is actually generated inside Child."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"getOnClick")," of ",(0,i.kt)("inlineCode",{parentName:"li"},"Child")," is memoized by useCallback.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"const getOnClick = useCallback((idx)=>(e)=>{...},[...]);\nconst List = list.map((el,idx)=><Child getOnClick={getOnClick)} idx={idx}/>);\nconst Child = ({getOnClick, idx})=>{<div onClick={getOnclick(idx)}>...</div>}\n")),(0,i.kt)("h3",{id:"5-reactcloneelement-to-pass-some-props-to-propschildren"},"5. ",(0,i.kt)("a",{parentName:"h3",href:"https://reactjs.org/docs/react-api.html#cloneelement"},"React.cloneElement")," to pass some props to ",(0,i.kt)("inlineCode",{parentName:"h3"},"props.children")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The resulting element will have the original element\u2019s props with the new props merged in shallowly."),(0,i.kt)("li",{parentName:"ul"},"original ",(0,i.kt)("inlineCode",{parentName:"li"},"key")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"ref")," will be preserved")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"const Wrapper = ({ children }) => {\n    const wrappedChildren = React.cloneElement(children, { ...newProps });\n    return <>{wrappedChildren}</>;\n};\n")))}d.isMDXComponent=!0}}]);